openapi: 3.0.0
info:
  title: Enclave API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 1.0.0

servers:
  - url: https://api.myenclave.space
    description: Main (production) server

paths:
  /client/{clientId}/booking:
    get:
      summary: List all the client's current bookings
      description: Returns a list of all the client's current bookings
      operationId: getClientBookings
      tags:
        - Client Booking
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

  /client/{clientId}/booking/{bookingId}:  
    patch:
      summary: Update unapproved booking
      description: Update given unapproved booking
      operationId: patchClientBooking
      tags:
        - Client Booking
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
    
    delete:
      summary: Cancel unapproved booking
      description: Cancel given unapproved booking
      operationId: deleteClientBooking
      tags:
        - Client Booking
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

  /space/{spaceId}:
    post:
      summary: Creates a booking request for a space
      description: Book a space for a given client
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

tags:
  - name: Client Booking
    description: Every relationship between a client and booking

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: Arthur Dent
      # Both properties are required
      required:  
        - id
        - name